{"version":3,"sources":["components/Alert.js","components/About.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","str","style","height","alert","className","type","role","charAt","toUpperCase","slice","message","About","backgroundColor","mode","color","id","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","border","aria-labelledby","data-bs-parent","Navbar","to","title","aria-label","aria-current","onClick","toggleMode","htmlFor","defaultProps","TextForm","useState","text","setText","heading","value","rows","onChange","event","target","disabled","length","showAlert","toLowerCase","split","join","filter","word","syllable","App","setMode","setAlert","setTimeout","document","body","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"6LAuBeA,MArBf,SAAeC,GACb,IAAoBC,EAGpB,OACE,yBAAKC,MAAO,CAAEC,OAAQ,SACnBH,EAAMI,OACL,6BACE,yBACEC,UAAS,sBAAiBL,EAAMI,MAAME,KAA7B,gCACTC,KAAK,SAEL,iCAXUN,EAWUD,EAAMI,MAAME,MAV7BE,OAAO,GAAGC,cAAgBR,EAAIS,MAAM,GAUvC,KAAiD,IAChDV,EAAMI,MAAMO,YCbV,SAASC,EAAMZ,GAC5B,OACE,oCACE,yBAAKK,UAAU,uBACb,wBACEA,UAAU,cACVH,MAAO,CACLW,gBAAgC,SAAfb,EAAMc,KAAkB,UAAY,OACrDC,MAAsB,SAAff,EAAMc,KAAkB,OAAS,YAJ5C,YASA,yBACET,UAAU,2BACVW,GAAG,mBACHd,MAAO,CACLW,gBAAgC,SAAfb,EAAMc,KAAkB,UAAY,OACrDC,MAAsB,SAAff,EAAMc,KAAkB,OAAS,YAG1C,yBACET,UAAU,iBACVH,MAAO,CACLa,MAAsB,SAAff,EAAMc,KAAkB,OAAS,UACxCD,gBAAgC,SAAfb,EAAMc,KAAkB,UAAY,SAGvD,wBAAIT,UAAU,mBAAmBW,GAAG,cAClC,4BACEX,UAAU,mBACVC,KAAK,SACLW,iBAAe,WACfC,iBAAe,eACfC,gBAAc,OACdC,gBAAc,cACdlB,MAAO,CACLa,MAAsB,SAAff,EAAMc,KAAkB,OAAS,UACxCD,gBAAgC,SAAfb,EAAMc,KAAkB,UAAY,OACrDO,OAAuB,SAAfrB,EAAMc,KAAkB,iBAAmB,YAVvD,cAgBF,yBACEE,GAAG,cACHX,UAAU,mCACViB,kBAAgB,aAChBC,iBAAe,oBACfrB,MAAO,CACLa,MAAsB,SAAff,EAAMc,KAAkB,OAAS,UACxCD,gBAAgC,SAAfb,EAAMc,KAAkB,UAAY,SAGvD,yBACET,UAAU,iBACVH,MAAO,CACLa,MAAsB,SAAff,EAAMc,KAAkB,OAAS,UACxCD,gBAAgC,SAAfb,EAAMc,KAAkB,UAAY,OACrDO,OAAuB,SAAfrB,EAAMc,KAAkB,iBAAmB,YAGrD,+QAMA,4G,WCnED,SAASU,EAAOxB,GAC7B,OACE,6BACE,yBACEK,UAAS,yCAAoCL,EAAMc,KAA1C,eAAqDd,EAAMc,OAEpE,yBAAKT,UAAU,mBACb,kBAAC,IAAD,CAAMA,UAAU,eAAeoB,GAAG,KAC/BzB,EAAM0B,OAET,4BACErB,UAAU,iBACVC,KAAK,SACLW,iBAAe,WACfC,iBAAe,0BACfE,gBAAc,yBACdD,gBAAc,QACdQ,aAAW,qBAEX,0BAAMtB,UAAU,yBAElB,yBAAKA,UAAU,2BAA2BW,GAAG,0BAC3C,wBAAIX,UAAU,mCACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,kBAAkBuB,eAAa,OAAOH,GAAG,KAAzD,SAIF,wBAAIpB,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWoB,GAAG,UAA9B,cAMJ,yBACEpB,UAAS,sCACQ,UAAfL,EAAMc,KAAmB,OAAS,UAGpC,2BACET,UAAU,mBACVC,KAAK,WACLC,KAAK,SACLS,GAAG,yBACHa,QAAS7B,EAAM8B,aAEjB,2BACEzB,UAAU,mBACV0B,QAAQ,0BAFV,yBAkBdP,EAAOQ,aAAe,CACpBN,MAAO,a,YCnEM,SAASO,EAASjC,GAC/B,IAoBA,EAAwBkC,mBAAS,cAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,OACE,yBACE/B,UAAU,iBACVH,MAAO,CAAEa,MAAsB,SAAff,EAAMc,KAAkB,OAAS,YAEjD,yBAAKT,UAAU,QACb,gCAAML,EAAMqC,SACZ,8BACEhC,UAAU,eACViC,MAAOH,EACPnB,GAAG,WACHuB,KAAK,KACLC,SArBa,SAACC,GACpBL,EAAQK,EAAMC,OAAOJ,QAqBfpC,MAAO,CACLa,MAAsB,SAAff,EAAMc,KAAkB,OAAS,UACxCD,gBAAgC,SAAfb,EAAMc,KAAkB,UAAY,WAI3D,4BACE6B,SAA0B,IAAhBR,EAAKS,OACfvC,UAAU,4BACVwB,QA3Ce,WACnBO,EAAQD,EAAK1B,eACbT,EAAM6C,UAAU,0BAA2B,aAsCzC,wBAOA,4BACEF,SAA0B,IAAhBR,EAAKS,OACfvC,UAAU,4BACVwB,QA9Ce,WACnBO,EAAQD,EAAKW,eACb9C,EAAM6C,UAAU,0BAA2B,aAyCzC,wBAOA,4BACEF,SAA0B,IAAhBR,EAAKS,OACfvC,UAAU,4BACVwB,QAjDY,WAChBO,EAAQ,IACRpC,EAAM6C,UAAU,oBAAqB,aA4CnC,cAOA,4BACEF,SAA0B,IAAhBR,EAAKS,OACfvC,UAAU,4BACVwB,QAjDoB,WACxBO,EAAQD,EAAKY,MAAM,QAAQC,KAAK,MAChChD,EAAM6C,UAAU,wBAAyB,aA4CvC,uBAQA,yBACExC,UAAU,YACVH,MAAO,CACLa,MAAsB,SAAff,EAAMc,KAAkB,OAAS,UACxCD,gBAAgC,SAAfb,EAAMc,KAAkB,UAAY,OACrDO,OAAuB,SAAfrB,EAAMc,KAAkB,iBAAmB,KAGrD,yBAAKT,UAAU,aACb,wBAAIA,UAAU,cAAd,iBACA,uBAAGA,UAAU,aAAb,yBACyB,IAErB8B,EACGY,MAAM,KACNE,QAAO,SAACC,GAAD,OAA0B,IAAhBA,EAAKN,UACtBI,KAAK,IAAIJ,QAGhB,uBAAGvC,UAAU,aAAb,oBACoB,IACjB8B,EAAKY,MAAM,KAAKE,QAAO,SAACC,GAAD,OAA0B,IAAhBA,EAAKN,UAAcA,QAEvD,uBAAGvC,UAAU,aAAb,qBACqC,IAAhB8B,EAAKS,OAAe,EAAIT,EAAKY,MAAM,MAAMH,QAE9D,uBAAGvC,UAAU,aAAb,uBACuB,IACJ,IAAhB8B,EAAKS,OAAe,EAAIT,EAAKY,MAAM,KAAKH,QAE3C,uBAAGvC,UAAU,aAAb,yBACyC,IAAhB8B,EAAKS,OAAe,EAAIO,YAAShB,O,WClDrDiB,MA/Cf,WACE,MAAwBlB,mBAAS,SAAjC,mBAAOpB,EAAP,KAAauC,EAAb,KACA,EAA0BnB,mBAAS,MAAnC,mBAAO9B,EAAP,KAAckD,EAAd,KACMT,EAAY,SAAClC,EAASL,GAC1BgD,EAAS,CACP3C,UACAL,SAEFiD,YAAW,WACTD,EAAS,QACR,MAaL,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC9B,EAAD,CAAQV,KAAMA,EAAMgB,WAdP,WACJ,UAAThB,GACFuC,EAAQ,QACRG,SAASC,KAAKvD,MAAMW,gBAAkB,UACtCgC,EAAU,8BAA+B,aAEzCQ,EAAQ,SACRG,SAASC,KAAKvD,MAAMW,gBAAkB,OACtCgC,EAAU,+BAAgC,eAOxC,kBAAC,EAAD,CAAOzC,MAAOA,IACd,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEsD,OAAK,EACLC,KAAK,IACLC,QACE,kBAAC3B,EAAD,CACEnB,KAAMA,EACNuB,QAAQ,mCACRQ,UAAWA,MAIjB,kBAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,SAASC,QAAS,kBAAChD,EAAD,CAAOE,KAAMA,UCnC5C+C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFhB,SAASiB,eAAe,SAG1BZ,M","file":"static/js/main.a21ec393.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (str) => {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n  };\r\n  return (\r\n    <div style={{ height: \"50px\" }}>\r\n      {props.alert && (\r\n        <div>\r\n          <div\r\n            className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n            role=\"alert\"\r\n          >\r\n            <strong>{capitalize(props.alert.type)}!</strong>{\" \"}\r\n            {props.alert.message}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import React from \"react\";\r\n\r\nexport default function About(props) {\r\n  return (\r\n    <>\r\n      <div className=\"container mb-4 mt-4\">\r\n        <h2\r\n          className=\"text-center\"\r\n          style={{\r\n            backgroundColor: props.mode === \"dark\" ? \"#343a40\" : \"#fff\",\r\n            color: props.mode === \"dark\" ? \"#fff\" : \"#343a40\",\r\n          }}\r\n        >\r\n          About Us\r\n        </h2>\r\n        <div\r\n          className=\"accordion container mt-3\"\r\n          id=\"accordionExample\"\r\n          style={{\r\n            backgroundColor: props.mode === \"dark\" ? \"#343a40\" : \"#fff\",\r\n            color: props.mode === \"dark\" ? \"#fff\" : \"#343a40\",\r\n          }}\r\n        >\r\n          <div\r\n            className=\"accordion-item\"\r\n            style={{\r\n              color: props.mode === \"dark\" ? \"#fff\" : \"#343a40\",\r\n              backgroundColor: props.mode === \"dark\" ? \"#343a40\" : \"#fff\",\r\n            }}\r\n          >\r\n            <h2 className=\"accordion-header\" id=\"headingOne\">\r\n              <button\r\n                className=\"accordion-button\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseOne\"\r\n                aria-expanded=\"true\"\r\n                aria-controls=\"collapseOne\"\r\n                style={{\r\n                  color: props.mode === \"dark\" ? \"#fff\" : \"#343a40\",\r\n                  backgroundColor: props.mode === \"dark\" ? \"#343a40\" : \"#fff\",\r\n                  border: props.mode === \"dark\" ? \"1px solid #fff\" : \"#343a40\",\r\n                }}\r\n              >\r\n                TextUtils\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseOne\"\r\n              className=\"accordion-collapse collapse show\"\r\n              aria-labelledby=\"headingOne\"\r\n              data-bs-parent=\"#accordionExample\"\r\n              style={{\r\n                color: props.mode === \"dark\" ? \"#fff\" : \"#343a40\",\r\n                backgroundColor: props.mode === \"dark\" ? \"#343a40\" : \"#fff\",\r\n              }}\r\n            >\r\n              <div\r\n                className=\"accordion-body\"\r\n                style={{\r\n                  color: props.mode === \"dark\" ? \"#fff\" : \"#343a40\",\r\n                  backgroundColor: props.mode === \"dark\" ? \"#343a40\" : \"#fff\",\r\n                  border: props.mode === \"dark\" ? \"1px solid #fff\" : \"#343a40\",\r\n                }}\r\n              >\r\n                <p>\r\n                  TextUtils is a project to provide as many online computer\r\n                  utilities to all users around the world as possible. The use\r\n                  of utilities is and will be free of charge. These utilities\r\n                  can be considered as accessories to Online Operating Systems.\r\n                </p>\r\n                <p>\r\n                  The founder of TextUtils is Raj Parmar. Email:\r\n                  rajpparmar1999@gmail.com\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            {props.title}\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                  Home\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">\r\n                  About Us\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n\r\n            <div\r\n              className={`form-check form-switch text-${\r\n                props.mode === \"light\" ? \"dark\" : \"light\"\r\n              }`}\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                role=\"switch\"\r\n                id=\"flexSwitchCheckDefault\"\r\n                onClick={props.toggleMode}\r\n              />\r\n              <label\r\n                className=\"form-check-label\"\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                Enable Dark Mode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"TextUtils\",\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { syllable } from \"syllable\";\r\n\r\nexport default function TextForm(props) {\r\n  const convertUpper = () => {\r\n    setText(text.toUpperCase());\r\n    props.showAlert(\"Converted to uppercase!\", \"success\");\r\n  };\r\n  const convertLower = () => {\r\n    setText(text.toLowerCase());\r\n    props.showAlert(\"Converted to lowercase!\", \"success\");\r\n  };\r\n  const clearText = () => {\r\n    setText(\"\");\r\n    props.showAlert(\"Cleared all text!\", \"success\");\r\n  };\r\n  const handleChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const removeExtraSpaces = () => {\r\n    setText(text.split(/[ ]+/).join(\" \"));\r\n    props.showAlert(\"Removed extra spaces!\", \"success\");\r\n  };\r\n  // const totalCharacters = () => {};\r\n  const [text, setText] = useState(\"Enter text\");\r\n  return (\r\n    <div\r\n      className=\"container mt-5\"\r\n      style={{ color: props.mode === \"dark\" ? \"#fff\" : \"#343a40\" }}\r\n    >\r\n      <div className=\"mb-3\">\r\n        <h2> {props.heading}</h2>\r\n        <textarea\r\n          className=\"form-control\"\r\n          value={text}\r\n          id=\"text-box\"\r\n          rows=\"10\"\r\n          onChange={handleChange}\r\n          style={{\r\n            color: props.mode === \"dark\" ? \"#fff\" : \"#343a40\",\r\n            backgroundColor: props.mode === \"dark\" ? \"#343a40\" : \"#fff\",\r\n          }}\r\n        ></textarea>\r\n      </div>\r\n      <button\r\n        disabled={text.length === 0}\r\n        className=\"btn btn-primary mx-1 my-1\"\r\n        onClick={convertUpper}\r\n      >\r\n        Convert to Uppercase\r\n      </button>\r\n      <button\r\n        disabled={text.length === 0}\r\n        className=\"btn btn-primary mx-1 my-1\"\r\n        onClick={convertLower}\r\n      >\r\n        Convert to Lowercase\r\n      </button>\r\n      <button\r\n        disabled={text.length === 0}\r\n        className=\"btn btn-primary mx-1 my-1\"\r\n        onClick={clearText}\r\n      >\r\n        Clear text\r\n      </button>\r\n      <button\r\n        disabled={text.length === 0}\r\n        className=\"btn btn-primary mx-1 my-1\"\r\n        onClick={removeExtraSpaces}\r\n      >\r\n        Remove Extra Spaces\r\n      </button>\r\n\r\n      <div\r\n        className=\"card mt-3\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"#fff\" : \"#343a40\",\r\n          backgroundColor: props.mode === \"dark\" ? \"#343a40\" : \"#fff\",\r\n          border: props.mode === \"dark\" ? \"1px solid #fff\" : \"\",\r\n        }}\r\n      >\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">Text Analyzer</h5>\r\n          <p className=\"card-text\">\r\n            Number of characters :{\" \"}\r\n            {\r\n              text\r\n                .split(\" \")\r\n                .filter((word) => word.length !== 0)\r\n                .join(\"\").length\r\n            }\r\n          </p>\r\n          <p className=\"card-text\">\r\n            Number of words :{\" \"}\r\n            {text.split(\" \").filter((word) => word.length !== 0).length}\r\n          </p>\r\n          <p className=\"card-text\">\r\n            Number of lines : {text.length === 0 ? 0 : text.split(\"\\n\").length}\r\n          </p>\r\n          <p className=\"card-text\">\r\n            Number of sentence :{\" \"}\r\n            {text.length === 0 ? 0 : text.split(\".\").length}\r\n          </p>\r\n          <p className=\"card-text\">\r\n            Number of syllables : {text.length === 0 ? 0 : syllable(text)}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      message,\n      type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#343a40\";\n      showAlert(\"Dark mode has been enabled.\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"#fff\";\n      showAlert(\"Light mode has been enabled.\", \"success\");\n    }\n  };\n  return (\n    <>\n      <BrowserRouter>\n        <Navbar mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <Routes>\n          <Route\n            exact\n            path=\"/\"\n            element={\n              <TextForm\n                mode={mode}\n                heading=\"Enter your text to analyze below\"\n                showAlert={showAlert}\n              />\n            }\n          ></Route>\n          <Route exact path=\"/about\" element={<About mode={mode} />}></Route>\n        </Routes>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}